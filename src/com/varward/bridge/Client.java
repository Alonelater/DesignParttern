package com.varward.bridge;

public class Client {
    //好 通过上面我们已经发现 我们每增加一个消息种类或者是增加一个消息发送渠道  我们需要创建大量的类
    //去帮我们实现这些方法
    //现在比如我们有一个特急的消息 我们需要使用信封的方式去送达
    //我们需要一个特急的信息类 去继承我们的Message统一接口 或者是UrgencyMessage加急接口
    //然后重写里面的所有方法  尽管有些永远我们用不上 这就是多余 这样的继承链会越来越长
    //接下来写好了特急的接口 我们又要写一个送信的方式也就是信封 那我们就要重新定义顶级接口 送信方式 短信息 邮件 还有信封 这样太麻烦了
    //会造成类爆炸的 所以我们引入桥梁(桥接模式)
    //将抽象化(Abstraction)与实现化(Implementation)脱耦，使得二者可以独立地变化
    //看improve包里面怎么实现这个问题

}
